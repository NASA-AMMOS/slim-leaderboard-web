name: Deploy SLIM Leaderboard Web Interface

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install slim-leaderboard dependencies
      run: |
        cd slim-leaderboard
        pip install -e .
        cd ..
        
    - name: Install Flask dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Prepare GitHub Pages deployment
      run: |
        # Copy the docs folder content as-is for GitHub Pages
        # The docs folder contains the static version with script-static.js
        cp -r docs/* .
        
        # Rename static script for GitHub Pages
        if [ -f script-static.js ]; then
          mv script-static.js script.js
        fi
        
        # Create _config.yml for Jekyll processing
        echo "theme: jekyll-theme-minimal" > _config.yml
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Build with Jekyll
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./
        destination: ./_site
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      
  deploy-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2